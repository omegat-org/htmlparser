<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
  "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<!-- $Id$ -->
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<meta name="robots" content="index,follow" />
<meta name="keywords" content="Searching For Data, PhpWiki" />
<meta name="description" content="Searching for data is one of the most challenging tasks in a web page due to its seemingly unstructured (or badly structured) form. Complex searches are now possible with the parser in a simple to use API. Here's an example :" />
<meta name="language" content="" />
<meta name="document-type" content="Public" />
<meta name="document-rating" content="General" />
<meta name="generator" content="phpWiki" />
<meta name="PHPWIKI_VERSION" content="1.3.4" />

<link rel="shortcut icon" href="/wiki/themes/default/images/favicon.ico" />
<link rel="home" title="HomePage" href="HomePage" />
<link rel="help" title="HowToUseWiki" href="HowToUseWiki" />
<link rel="copyright" title="GNU General Public License" href="http://www.gnu.org/copyleft/gpl.html#SEC1" />
<link rel="author" title="The PhpWiki Programming Team" href="http://phpwiki.sourceforge.net/phpwiki/ThePhpWikiProgrammingTeam" />
<link rel="search" title="FindPage" href="FindPage" />
<link rel="alternate" title="View Source: SearchingForData" href="SearchingForData?action=viewsource&amp;version=4" />
<link rel="alternate" type="application/rss+xml" title="RSS" href="RecentChanges?format=rss" />

<link rel="bookmark" title="SandBox" href="SandBox" />
<link rel="bookmark" title="WikiWikiWeb" href="WikiWikiWeb" />



<link rel="stylesheet" title="MacOSX" type="text/css" charset="iso-8859-1" href="/wiki/themes/MacOSX/MacOSX.css" /><link rel="alternate stylesheet" title="Printer" type="text/css" charset="iso-8859-1" href="/wiki/themes/default/phpwiki-printer.css" media="print, screen" /><link rel="alternate stylesheet" title="Modern" type="text/css" charset="iso-8859-1" href="/wiki/themes/default/phpwiki-modern.css" /><style type="text/css">
<!--
body {background-image: url(/wiki/themes/MacOSX/images/bgpaper8.png);}
-->
</style>
<title>PhpWiki - Searching For Data</title>
</head>
<!-- End head -->
<!-- Begin body -->
<!-- $Id$ -->
<body>
<!-- Begin top -->
<!-- $Id$ -->

<!-- End top -->
<!-- Begin browse -->
<!-- $Id$ -->


<div class="wikitext"><p>Searching for data is one of the most challenging tasks in a web page due to its seemingly unstructured (or badly structured) form. Complex searches are now possible with the parser in a simple to use API. Here's an example :</p>
<p>We are looking at a page which has the following html:</p>
<pre>
&lt;html&gt;
...
&lt;body&gt;
   &lt;table&gt;
     &lt;tr&gt;
       &lt;td&gt;&lt;font size="-1"&gt;Name:&lt;b&gt;&lt;i&gt;John Doe&lt;/i&gt;&lt;/b&gt;&lt;/font&gt;&lt;/td&gt;
       ..
     &lt;/tr&gt;
     &lt;tr&gt;
       ..
     &lt;/tr&gt;
   &lt;/table&gt;
&lt;/body&gt;
&lt;/html&gt;</pre>
<p>We'd like to extract the information corresponding to the field "Name". This is possible if we make use of the fact that the name appears two tags after "Name".</p>
<p>Code to achieve this would look like:</p>
<pre>
Node nodes [] = parser.extractAllNodesThatAre(TableTag.class);
// Get the first table found
TableTag table = (TableTag)nodes[0];

// Find the position of Name.
StringNode [] stringNodes = table.digupStringNode("Name");
StringNode name = stringNodes[0];

// We assume that the first node that matched is the one we want. We
// navigate to its parent, the column tag &lt;td&gt;
CompositeTag td = name.getParent();

// From the parent, we shall find out the position of "Name"
int posOfName = td.findPositionOf(name);

// Its easy now to navigate to John Doe, as we know it is 3 positions away
Node expectedName = td.childAt(posOfName + 3);
</pre>
<hr /><p>You can move up the parent tree - e.g. when the data is in seperate columns,</p>
<pre>
&lt;html&gt;
...
&lt;body&gt;
   &lt;table&gt;
     &lt;tr&gt;
       &lt;td&gt;&lt;font size="-1"&gt;Name:&lt;/font&gt;&lt;/td&gt;
       &lt;td&gt;&lt;font size="-1"&gt;John Doe&lt;/font&gt;&lt;/td&gt;
     &lt;/tr&gt;
     &lt;tr&gt;
       ..
     &lt;/tr&gt;
   &lt;/table&gt;
&lt;/body&gt;
&lt;/html&gt;</pre>
<p>We'd like to perform the same search on "Name".</p>
<p>Code to achieve this would look like:</p>
<pre>
Node nodes [] = parser.extractAllNodesThatAre(TableTag.class);
// Get the first table found
TableTag table = (TableTag)nodes[0];

// Find the position of Name.
StringNode [] stringNodes = table.digupStringNode("Name");

// We assume that the first node that matched is the one we want. We
// navigate to its parent (column &lt;td&gt;)
CompositeTag td = stringNodes[0].getParent();

// Navigate to its parent (row &lt;tr&gt;)
CompositeTag tr = parentOfName.getParent();

// From the parent, we shall find out the position of the column
int columnNo = tr.findPositionOf(td);

// Its easy now to navigate to John Doe, as we know it is in the next column
TableColumn nextColumn = (TableColumn)tr.childAt(columnNo+1);

// The name is the second item in the column tag
Node expectedName = nextColumn.childAt(1);</pre>
</div>


<!-- End browse -->
<!-- Begin bottom -->
<!-- $Id$ -->
<!-- Add your Disclaimer here -->
<!-- Begin debug -->
<!-- $Id$ -->
<table width="%100" border="0" cellpadding="0" cellspacing="0">
<tr><td>

</td><td>
<span class="debug">Page Execution took 0.261 seconds</span>
</td></tr></table>
<!-- This keeps the valid XHTML! icons from "hanging off the bottom of the scree" -->
<br style="clear: both;" />
<!-- End debug -->
<!-- End bottom -->
</body>
<!-- End body -->
<!-- phpwiki source:
$Id$
$Id$
$Id$
$Id$
$Id$
$Id$
$Id$
$Id$
$Id$
$Id$
$Id$
$Id$
$Id$
$Id$
$Id$
$Id$
$Id$
From Pear CVS: Id: DB.php,v 1.13 2002/07/02 15:19:49 cox Exp
$Id$
From Pear CVS: Id: PEAR.php,v 1.29 2001/12/15 15:01:35 mj Exp
$Id$
From Pear CVS: Id: mysql.php,v 1.5 2002/06/19 00:41:06 cox Exp
$Id$
From Pear CVS: Id: common.php,v 1.8 2002/06/12 15:03:16 fab Exp
$Id$
$Id$
$Id$
$Id$
$Id$
$Id$
$Id$
$Id$
$Id$
-->
</html>
