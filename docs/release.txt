HTMLParser Integration Release 1.2 - 2002_08_04
***********************************************

Q1. What are the contents of the distribution ? 
Q2. Which part of the source code should I analyze to be able to use it in my project ? 
Q3. How do I extend the capability of this library ? 

*********************************************************
Q1. What are the contents of the distribution ?

A1. The distribution contains :
    (i) binary jar file - htmlparser.jar (in lib directory)
    (ii) source code - src.zip (in distribution directory)
    (iii) documentation - doc directory (includes javadoc)
    (iv) Executing scripts - There are three scripts (in the bin directory):
         (a) runParser.bat  : Runs the html parser
         (b) runCrawler.bat : Runs the robot crawler
         (c) runRipper.bat  : Runs the mail ripper   
         All three batch files assume that java 1.2 (or upwards) is visible in your path.

Issue the following command : 
java -jar htmlparser.jar myURL (or runParser myURL)

The following are legal examples of usage: 
java -jar htmlparser.jar http://www.yahoo.com  (or runParser http://www.yahoo.com)
java -jar htmlparser.jar http://www.google.com -l (or runParser http://www.google.com -l)
java -jar htmlparser.jar c:\html\test.html (or runParser c:\html\test.html)

To see a list of options, simply type : 
java -jar htmlparser.jar 

and the switches allowed will be shown. 
  
---------- *** ------------
Q2. Which part of the source code should I analyze to be able to use it in my project ?

Go through the javadoc of HTMLParser.java - it contains all the examples to get you started.

Also go through the package com.kizna.parserapplications. 
The two applications here, Robot and MailRipper, have been expressly written for the purpose of demonstrating the usage of htmlparser.

---------- *** ------------

Q3. How do I extend the capability of this library ?

You need to extend the HTMLTagScanner in order to take advantage of existing 
code to identify a generic tag. You could add further processing code based 
on the tag contents. For more information on how to do this, examine the code 
of the scanners in the com.kizna.html.scanners package. The scanners 
basically use a Template Method+Factory Method approach. You need to 
override the evaluate() and scan() methods, and register your 
scanner to the parser before you begin parsing.

This process is simple, check the com.kizna.html.scanners package
to see how the existing scanners work.
---------- *** ------------

Acknowledgements :
The following people have contributed important bug reports, feature ideas :
[1] Kaarle Kaaila
[2] Taras Bendik
[3] Allen G Fogelson
[4] Manpreet Singh
[5] Roger Kjensrud
[6] Nash Tsai
[7] Rodney S Foley
[8] Serge Kruppa
[9] Raj Sharma
[10] Sam Joseph
[11] Raghavender Srimantula
[12] Wolfgang Germund
[13] Claude Duguay
[14] Cedric Rosa
[15] Amit Rana
[16] Kamen
[17] John Zook
[18] Mazlan Mat
[19] Rob Shields

If you find any bugs, please go to 
http://htmlparser.sourceforge.net and click on the Bugs link. You can open a bug case here. 
You will be amazed at the speed of fixing. Open Source rocks!

And please join the HTMLParser-User mailing list
to get help on getting started. Join HTMLParser-Developer
to become a developer on this project. Join HTMLParser-Announce to 
be notified whenever a new release is out.

All these mailing lists can be joined from http://htmlparser.sourceforge.net
