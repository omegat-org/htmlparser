Integration Build 1.2 - 20020826
--------------------------------
[1] Added new tag-scanner pairs for the following tags:
(i) INPUT
(ii) TEXTAREA
(iii) OPTION
(iv) SELECT
[2] The newline character being used in toHTML() was different across
different tags and also in some cases in scan() methods of scanners. It
has been changed to pick up the system property "line.separator" from
the JVM environment and that is used in toHTML() as well as scan().
Alternatively, users can set their own line separators using
HTMLParser.setLineSeparator() or HTMLNode.setLineSeparator(). Both have
the same effect.
[3] Fixed HTMLRemarkNode bugs (594301)

Integration Build 1.2 - 20020811
--------------------------------
[1] Fixed bug 590703 - Empty values dont get parsed 
[2] Fixed bug 591435 - Missing values cause keys to be missed
[3] Removed all infinite loops in scanners, replaced with throwing HTMLParserException
[4] Fixed bug in HTMLTitleScanner, allowing certain malformed title tags to be parsed
[5] Modified HTMLReader - now accepts Reader instead of BufferedReader
[6] HTMLParser constructor now throws HTMLParserException.
[7] Fixed bug 592355 - Empty tags throw exceptions from some scanners. Now, if the 
tag is empty, it is not passed down to scanners. Also, fixed the related issue in 
HTMLStringNode, causing empty tags to be treated as tags and not strings.

Integration Build 1.2 - 20020804
--------------------------------
[1] Fixed bug 590250, problem in HTMLStringNode, by which a single
character on the last line was causing a parser crash
[2] Optimized and refactored HTMLParameterParaser.parseParameters()
[3] Modified PerformanceTest to exclude first reading in average computation
[4] Fixed bug in HTMLParameterParser.parseParameters(), due to which
params with spaces before = were not being picked up
[5] Made massive API changes - throwing exceptions and using HTMLEnumeration
[6] Fixed HTMLRemarkNode bug - we can recognize stuff like &lt;!--&gt; now.
[7] Fixed HTMLImageScanner bug - we can now fix image tags like
IMG SRC"somepic.jpg" - the missing equal to can be deduced
[8] Fixed HTMLLinkScanner bug - end tags within a link were not being included
inside the link data.

Integration Build 1.2 - 20020728
--------------------------------
[1] Fixed bug in HTMLParser.openConnection(), mistaking 
files for urls if they contain "http" or "www" anywhere.
[2] Updated HTMLEndTag, this was accidentally left out in the 
previous release.
[3] Fixed Bug 586062 - relative links bug - if first char is a 
slash, then the subdirectories of the url need to be ignored.
[4] Fixed Bug 586222 - HTMLRemarkNode bug - if a line with a remark 
ndoe contains a string before it, the string is ignored.
[5] Fixed major bug - allowing auto-correction
of malformed tags. Current code is very robust. Fix allowed removal of 
strictness vector concept, making the design simpler.
[6] Fixed bug 586756 - in HTMLRemarkNode, if there are empty lines only, the 
finite state machine would crash

Integration Build 1.2 - 20020721
--------------------------------
[1] Fixed HTMLStringNode bug, whereby it wasnt able to 
skip some wierd Microsoft tags (endif)
[2] Fixed a deep bug in HTMLTag.java, the parser would crash
on http://www.cybergeo.presse.fr/culture/weili/weili.htm
[3] Fixed bug in HTMLTagScanner.java, in absorbLeadingBlanks()
[4] Fixed bug in HTMLEndTag, allowing more robustness now in 
scanning malformed end tags

Integration Build 1.2 - 20020707
--------------------------------
[1] Fixed major slowdown bug in HTMLStringNode.find().
This version is twice as fast as ver 1.1.
[2] Fixed bug in ScriptScanner, would break on incorrect
html inside script code. 
[3] Removed FormScanner from standard registered scanners
as it has a bug in parsing non-ended forms (infinite loop).

Integration Build 1.2 - 20020630
--------------------------------
[1] Fixed bug in linking of meta and title tags
with their scanners
[2] Fixed bug in parsing broken tags
[3] Refactored design - scan() returns a HTMLTag now, 
and is called inside a template method createScannedNode()
inside HTMLTagScanner. Scanner designers dont have to
worry about making links with the scanner and the tag
created, and forcing of attribute parsing. HTMLEndTag
is now a HTMLTag, hence there is more uniformity in the interface now.
[4] Fixed bug in HTMLLinkScanner, enabling it to 
parse broken links.
[5] Title Tags linked to -T instead of -t (clashing earlier with style tags)

Integration Build 1.2 - 20020623
--------------------------------
[1] Refactored HTMLAppletScanner
[2] Refactored HTMLScriptScanner
[3] Added testcases for script scanner
[4] Refactored HTMLTagScanner (removed extractField)
[5] Fixed bug in HTMLLinkScanner - would crash on freshmeat.net,
bcos of &lt;a&gt;Revision&lt;/a&gt;. Now this is being treated as three
seperate nodes(tag, string node, end tag)
[6] Fixed ant script bug, not allowing it to be run from the command
line by issuing the ant command.
[7] Redesigned HTMLFormScanner, testcases written, included in package
[8] Refactored HTMLImageScanner evaluate() method to be more optimized
[9] Redesigned HTMLFrameScanner, testcases written, also written 
HTMLFrameSetScanner.
[10] Fixed bug in HTMLTag, now parseParameters is automatically
called only once, when either getParsed(), or getParameter() is invoked.
[11] toRawString() renamed to toHTML() - intention revealing name

Integration Build 1.2 - 20020616
--------------------------------
[1] Fixed multiple line bug (reported by Gordon Deudney).
HTMLStringNode now scans a complete string block, instead
of producing string node objects per line.
[2] Refactored HTMLScriptScanner, code size reduced, made
consistent with design

Integration Build 1.2 - 20020607
--------------------------------
Incorporated bug fixes by Wolfgang Germund
In HTMLScriptScanner - the html extracted with toRawString
did not mirror the actual html data.

Integration Build 1.2 - 20020512
--------------------------------
[1] Made Link Scanner more fault tolerant.
Can handle bad links like
&lt;A HREF="..."&gt;&lt;IMG&gt;&lt;/td&gt;&lt;td ...&gt;&lt;A href=".."&gt;...&lt;/a&gt;

In the above, the first link is correctly ended before&lt;/td&gt;

&lt;A HREF="..."&gt;&lt;IMG&gt;&lt;A HREF="..."&gt;...&lt;/a&gt;

The first link is correctly ended before the second link begins

[2] Bug in HTMLLinkProcessor fixed. Relative links were spuriously
identified even if they used a non-http protocol (like ftp, gopher).

Nightly Build 1.2 - 20020507
----------------------------
[1] HTMLNode is no longer an interface, but an abstract class. There were two reasons for this change. Firstly, I couldnt think of a scenario where an object would be an html tag AND something else. Secondly, I wanted to enforce the implementation of toString(), which is usually done if you implement from the interface (as Object has a default toString()).
[2] abstract toString() method - children have to implement this.
[3] print() and print(PrintWriter) - final methods. They will make a call to toString(), and print to standard output and the print writer respectively.
[4] toPlainText() - this method will provide a string representation of a tag, if there is such a representation. If not , a blank string is returned. This has implications - our program to extract all strings from a html page will be simplified to:
[5] toRawString() - this method provides the complete html element (a reconstruction), thus allowing ripping programs to be really simple. So if you want to rip the html page to your local hard disk, your program would look like,
[6] Lots of bug fixes done - HTMLImageScanner had a bug, HTMLStyleScanner also had one - all caught with more testcases.

Nightly Build 1.2 - 20020503
----------------------------
[1] Major fix - Dirty parsing of erroneous inverted commas possible
[2] Tags spread out on multiple lines, with blank lines in between are supported
[3] Bug in HTMLStringNode fixed, so as to be able to parse tag characters &lt; and &gt;
[4] Image tag parameters not being retrieved, bug fixed
[5] Added HTMLFormScanner, HTMLFrameScanner, HTMLFormTag, HTMLFrameTag - but these
are not yet integrated with the code, pending testcases.

